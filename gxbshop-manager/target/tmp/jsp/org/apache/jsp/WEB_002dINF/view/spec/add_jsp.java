/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.20.v20190813
 * Generated at: 2020-06-27 14:51:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.spec;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("\t<form action=\"\" id=\"specForm\">\n");
      out.write("\t\t\n");
      out.write("\t\t<div class=\"form-group row\">\n");
      out.write("\t\t    <label for=\"specName\" class=\"col-sm-2 col-form-label\">规格名称</label>\n");
      out.write("\t\t    <div class=\"col-sm-4\">\n");
      out.write("\t\t      <input type=\"text\" class=\"form-control\" id=\"specName\" name=\"specName\">\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t </div>\n");
      out.write("\t\t <div class=\"form-group row\">\n");
      out.write("\t\t\t <div class=\"col-sm-1\">\n");
      out.write("\t\t\t </div>\n");
      out.write("\t\t \t<div class=\"col-sm-6\">\n");
      out.write("\t\t \t<table id=\"table\">\n");
      out.write("\t\t \t\t<tr>\n");
      out.write("\t\t \t\t\t<td>属性名称</td>\n");
      out.write("\t\t \t\t\t<td>显示顺序</td>\n");
      out.write("\t\t \t\t\t<td><button type=\"button\" onclick=\"addLine()\">添加</button></td>\n");
      out.write("\t\t \t\t</tr>\n");
      out.write("\t\t \t\t<tr>\n");
      out.write("\t\t \t\t\t<td><input name=\"options[0].optionName\"></td>\n");
      out.write("\t\t \t\t\t<td><input type=\"number\" name=\"options[0].orders\"></td>\n");
      out.write("\t\t \t\t\t<td><button type=\"button\" onclick=\"removeLine($(this))\">删除</button></td>\n");
      out.write("\t\t \t\t</tr>\n");
      out.write("\t\t \t</table>\n");
      out.write("\t\t \t</div>\n");
      out.write("\t\t </div>\n");
      out.write("\t\t <div class=\"form-group row\">\n");
      out.write("\t\t \t<button type=\"button\" onclick=\"commitData()\">提交</button>\n");
      out.write("\t\t </div>\n");
      out.write("\t</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\tvar index=1;\n");
      out.write("\tfunction addLine(){\n");
      out.write("\t\t$(\"#table\").append(`\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t \t\t\t<td><input name=\"options[`+index+`].optionName\"></td>\n");
      out.write("\t \t\t\t<td><input type=\"number\" name=\"options[`+index+`].orders\"></td>\n");
      out.write("\t \t\t\t<td><button onclick=\"removeLine($(this))\">删除</button></td>\n");
      out.write("\t \t\t</tr>\n");
      out.write("\t\t\t\t`)\n");
      out.write("\t\t\tindex++\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction removeLine(btnObj){\n");
      out.write("\t\tbtnObj.parent().parent().remove();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction commitData(){\n");
      out.write("\t\t// 得到需要提交的数据\n");
      out.write("\t\tvar formData = new FormData($('#specForm')[0]);\n");
      out.write("\t\t$.ajax({url:'./spec/add',\n");
      out.write("\t\t\t  type:'post',\n");
      out.write("\t\t\t  processData:false,\n");
      out.write("\t\t\t  contentType:false,\n");
      out.write("\t\t\t  data:formData,\n");
      out.write("\t\t\t  success:function(data){\n");
      out.write("\t\t\t\t  if(data=='ok'){\n");
      out.write("\t\t\t\t\t\talert('添加成功')\n");
      out.write("\t\t\t\t\t\t$(\"#workContent\").load('./spec/list');\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\talert('添加失败')\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t  }\n");
      out.write("\t      })//end ajax\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
